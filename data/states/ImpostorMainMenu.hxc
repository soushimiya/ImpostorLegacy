//package impostor;
// ^fuck my custom state code..... il redo later!
import flixel.FlxG;
import flixel.FlxSprite;
import flixel.FlxObject;
import flixel.addons.display.FlxBackdrop;
import title.TitleScreen;
import flixel.tweens.FlxTween;
import flixel.tweens.FlxEase;
import flixel.util.FlxTimer;
import extensions.flixel.FlxTextExt;
import scripts.ScriptableState;

import story.StoryMenuState;
import config.ConfigMenu;

class MainMenuState extends ScriptedState
{
	var optionShit:Array<String> = ['Story Mode', 'Freeplay', 'Gallery', 'Credits', 'Options', 'Shop', 'Innersloth'];

	var curSelected:Int = 0;
	var starFG:FlxBackdrop;
	var starBG:FlxBackdrop;
	var redImpostor:FlxSprite;
	var greenImpostor:FlxSprite;
	var glowyThing:FlxSprite;

	override public function create():Void
	{
		super.create();

		if (!FlxG.sound.music.playing){	
			MainMenuState.playMenuMusic();
		}

		FlxG.mouse.visible = true;

		var bg:FlxSprite = new FlxSprite(0, 0).makeGraphic(FlxG.width, FlxG.height, 0xFF000000);
		bg.scrollFactor.set();
		add(bg);

		starFG = new FlxBackdrop(Paths.image('menu/starFG'));
		starFG.updateHitbox();
		starFG.antialiasing = true;
		starFG.scrollFactor.set();
		add(starFG);
		starFG.velocity.x = -3;

		starBG = new FlxBackdrop(Paths.image('menu/starBG'));
		starBG.updateHitbox();
		starBG.antialiasing = true;
		starBG.scrollFactor.set();
		add(starBG);
		starBG.velocity.x = -1;


		redImpostor = new FlxSprite(350, -160);
		redImpostor.frames = Paths.getSparrowAtlas('menu/main/redmenu');
		redImpostor.animation.addByPrefix('idle', 'red idle', 24, true);
		redImpostor.animation.addByPrefix('select', 'red select', 24, false);

		greenImpostor = new FlxSprite(-300, -60);
		greenImpostor.frames = Paths.getSparrowAtlas('menu/main/greenmenu');
		greenImpostor.animation.addByPrefix('idle', 'green idle', 24, true);
		greenImpostor.animation.addByPrefix('select', 'green select', 24, false);

		// funny optimize shit
		for (imp in [redImpostor, greenImpostor])
		{
			imp.animation.play('idle');
			imp.antialiasing = true;
			imp.updateHitbox();
			imp.active = true;
			imp.scale.set(0.7, 0.7);
			imp.scrollFactor.set();
			add(imp);
		}

		var vignette = new FlxSprite(0, 0).loadGraphic(Paths.image('menu/main/vignette'));
		vignette.antialiasing = true;
		vignette.updateHitbox();
		vignette.active = false;
		vignette.scrollFactor.set();
		add(vignette);

		menuItems = new FlxTypedGroup();
		add(menuItems);

		for(i in 0...optionShit.length) {
			var testButton:FlxSprite = new FlxSprite(0, 130);
			testButton.ID = i;
			if(i > 3)
				testButton.frames = Paths.getSparrowAtlas('menu/main/Buttons_UI');
			else
				testButton.frames = Paths.getSparrowAtlas('menu/main/Big_Buttons_UI');

			testButton.animation.addByPrefix('idle', optionShit[i] + ' Button', 24, true);
			testButton.animation.addByPrefix('hover', optionShit[i] + ' Select', 24, true);
			testButton.animation.play('idle');
			testButton.antialiasing = true;
			testButton.scale.set(0.50 ,0.50);
			testButton.updateHitbox();
			testButton.scrollFactor.set();
			// brian was here
			//hi
			switch(i) {
				case 0:
					testButton.setPosition(400, 475);
				case 1:
					testButton.setPosition(633, 475);
				case 2:
					testButton.setPosition(400, 580);
				case 3:
					testButton.setPosition(633, 580);
				case 4:
					testButton.setPosition(455, 640);
				case 5:
					testButton.setPosition(590, 640);
				case 6:
					testButton.setPosition(725, 640);
			}
			menuItems.add(testButton);
		}

		var logo:FlxSprite = new FlxSprite(0, -160);
		logo.frames = Paths.getSparrowAtlas('logoBumpin');
		logo.animation.addByPrefix('bump', 'logo bumpin', 24, false);
		logo.screenCenter(ScriptingUtil.axisX);
		logo.updateHitbox();
		logo.antialiasing = true;
		logo.scale.set(0.65, 0.65);
		add(logo);

		var versionShit:FlxTextExt = new FlxTextExt(12, FlxG.height - 44, 0, "VS Impostor Estate\n", 12);
		versionShit.scrollFactor.set();
		versionShit.setFormat(Paths.font("vcr"), 16, 0xffffffff, "left", FlxTextBorderStyle.OUTLINE, 0xff000000);
		add(versionShit);

		versionShit.text += "FPS Plus: v7.1.2";
	}

	var selectedSomethin:Bool = false;

	var canClick:Bool = true;
	var usingMouse:Bool = false;

	var timerThing:Float = 0;

	override function update(elapsed:Float)
	{
		super.update(elapsed);

		menuItems.forEach(function(spr:FlxSprite)
		{
			if(usingMouse)
			{
				if(!FlxG.mouse.overlaps(spr))
					spr.animation.play('idle');
			}
	
			if (FlxG.mouse.overlaps(spr))
			{
				if(canClick)
				{
					curSelected = spr.ID;
					usingMouse = true;
					spr.animation.play('hover');
				}
					
				if(FlxG.mouse.justPressed && canClick)
					selectSomething();
			}
			spr.updateHitbox();
		});

		if (Binds.justPressed("menuBack") && !selectedSomethin)
			switchState(new TitleScreen());
	}

	function selectSomething()
	{
		switch (optionShit[curSelected]) {
			case 'Gallery':
				FlxG.openURL('https://vsimpostor.com/');
			case 'Innersloth':
				FlxG.openURL('https://www.innersloth.com/');
			default:
				FlxG.sound.play(Paths.sound('confirmMenu'));
				greenImpostor.animation.play('select');
				redImpostor.animation.play('select');

				selectedSomethin = true;
				canClick = false;

				menuItems.forEach(function(spr:FlxSprite)
				{
					if (curSelected != spr.ID)
					{
						FlxTween.tween(starFG, {y: starFG.y + 500}, 0.7, {ease: FlxEase.quadInOut});
						FlxTween.tween(starBG, {y: starBG.y + 500}, 0.7, {ease: FlxEase.quadInOut, startDelay: 0.2});
						FlxTween.tween(greenImpostor, {y: greenImpostor.y + 800}, 0.7, {ease: FlxEase.quadInOut, startDelay: 0.24});
						FlxTween.tween(redImpostor, {y: redImpostor.y + 800}, 0.7, {ease: FlxEase.quadInOut, startDelay: 0.3});
						FlxG.camera.fade(0xFF000000, 0.7, false);
						FlxTween.tween(spr, {alpha: 0}, 1.3, {
							ease: FlxEase.quadOut,
							onComplete: function(twn:FlxTween)
							{
								spr.kill();
							}
						});
					}
					else
					{
						FlxTween.tween(starFG, {y: starFG.y + 500}, 1, {ease: FlxEase.quadInOut});
						FlxTween.tween(starBG, {y: starBG.y + 500}, 1, {ease: FlxEase.quadInOut, startDelay: 0.2});
						FlxTween.tween(greenImpostor, {y: greenImpostor.y + 800}, 0.7, {ease: FlxEase.quadInOut, startDelay: 0.24});
						FlxTween.tween(redImpostor, {y: redImpostor.y + 800}, 0.7, {ease: FlxEase.quadInOut, startDelay: 0.3});
						FlxG.camera.fade(0xFF000000, 0.7, false);

						FlxG.sound.music.fadeOut(1.5, 0);
						new FlxTimer().start(1, function(tmr:FlxTimer){
							switchToState(optionShit[curSelected]);
						});
					}
			});
		}
	}

	function switchToState(choice)
	{
		switch (choice)
		{
			case 'Story Mode':
				switchState(new StoryMenuState());
			case 'Freeplay':
				switchState(ScriptableState.init("impostor.ImpostorFreeplay"));
			case 'Shop':
				//switchState(new ShopState());
			case 'Options':
				switchState(new ConfigMenu());
			case 'Credits':
				//switchState(new ModManagerState());
		}
	}
}